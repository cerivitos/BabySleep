{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\src\\components\\Entry.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  Date.prototype.toDateInputValue = function() {\r\n    let local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n\r\n    return local.toJSON().slice(0, 10);\r\n  };\r\n\r\n  Date.prototype.toTimeInputValue = function() {\r\n    let local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n\r\n    return local.toJSON().slice(11, 16);\r\n  };\r\n\r\n  let putDownDate = new Date().toDateInputValue();\r\n  let putDownTime = new Date().toTimeInputValue();\r\n  let sleepDate,\r\n    sleepTime,\r\n    wakeDate,\r\n    wakeTime,\r\n    pickUpDate,\r\n    pickUpTime,\r\n    currentDateTime,\r\n    elapsedSleepTime;\r\n\r\n  let time = new Date();\r\n\r\n  onMount(() => {\r\n    const interval = setInterval(() => {\r\n      time = new Date();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  $: currentDateTime = time.getTime();\r\n  $: if (sleepTime === undefined) {\r\n    elapsedSleepTime = 0;\r\n  } else {\r\n    let sleepDateMillis = new Date(sleepDate + \" \" + sleepTime).getTime();\r\n\r\n    elapsedSleepTime = Math.round(\r\n      (currentDateTime - sleepDateMillis) / 1000 / 60\r\n    );\r\n  }\r\n</script>\r\n\r\n<style>.input{font-size:1.875rem;border-bottom-width:4px;color:#edf2f4;border-color:#ef233c;background-color:transparent;margin-bottom:1rem;width:auto}.background{padding:1rem;background-color:#2b2d42;color:#8d99ae}</style>\r\n\r\n<div class=\"background\">\r\n  <h1>\r\n    Put down at\r\n    <input class=\"input\" type=\"date\" bind:value={putDownDate} />\r\n    <input class=\"input\" type=\"time\" bind:value={putDownTime} />\r\n  </h1>\r\n  <div class=\"w-full my-8 text-3xl text-center\">▼</div>\r\n</div>\r\n<div class=\"background\">\r\n  <h1>\r\n    Fell asleep at\r\n    <input\r\n      class=\"input\"\r\n      type=\"date\"\r\n      bind:value={sleepDate}\r\n      value={new Date().toDateInputValue()}\r\n      min={putDownDate} />\r\n    <input\r\n      class=\"input\"\r\n      type=\"time\"\r\n      bind:value={sleepTime}\r\n      value={new Date().toTimeInputValue()}\r\n      min={putDownTime} />\r\n  </h1>\r\n  <div class=\"w-full my-8 text-3xl text-center\">▼</div>\r\n</div>\r\n<div class=\"my-12 w-full justify-center flex\">\r\n  <body class=\"text-2xl text-backgroundColor\">\r\n    Asleep for\r\n    <div\r\n      class=\"inline-block px-2 py-1 rounded-full w-auto text-center\r\n      bg-secondaryColor font-medium\">\r\n      {elapsedSleepTime}\r\n    </div>\r\n    {elapsedSleepTime === 1 ? 'minute' : 'minutes'}\r\n  </body>\r\n</div>\r\n\r\n<div class=\"w-full my-8 text-3xl text-center\">▼</div>\r\n<h1>\r\n  Woke up at\r\n  <input class=\"input\" type=\"date\" bind:value={wakeDate} />\r\n  <input class=\"input\" type=\"time\" bind:value={wakeTime} />\r\n</h1>\r\n<div class=\"w-full my-8 text-3xl text-center\">▼</div>\r\n<h1>\r\n  Picked up at\r\n  <input class=\"input\" type=\"date\" bind:value={pickUpDate} />\r\n  <input class=\"input\" type=\"time\" bind:value={pickUpTime} />\r\n</h1>\r\n"
  ],
  "names": [],
  "mappings": "AAoDO,qBAAM,CAAC,UAAU,QAAQ,CAAC,oBAAoB,GAAG,CAAC,MAAM,OAAO,CAAC,aAAa,OAAO,CAAC,iBAAiB,WAAW,CAAC,cAAc,IAAI,CAAC,MAAM,IAAI,CAAC,0BAAW,CAAC,QAAQ,IAAI,CAAC,iBAAiB,OAAO,CAAC,MAAM,OAAO,CAAC"
}